<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Iniciar Sesión</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f0f0;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #333;
        }

        .form-container {
            margin-top: 20px;
        }

        form {
            padding: 10px;
            border: 1px solid #e1e1e1;
            border-radius: 5px;
            margin-bottom: 10px;
        }

        label {
            display: block;
            margin-bottom: 5px;
        }

        input {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background-color: #0056b3;
        }

        #protectedButton {
            margin-top: 20px;
            background-color: #28a745;
        }

        #protectedButton:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Iniciar Sesión</h1>

        <div class="form-container">
            <h2>Iniciar Sesión con Correo Electrónico</h2>
            <form id="loginForm" class="login-form">
                <label for="email">Correo Electrónico:</label>
                <input type="email" id="email" name="email" required>
                <label for="password">Contraseña:</label>
                <input type="password" id="password" name="password" required>
                <button type="submit">Iniciar Sesión</button>
            </form>

            <h2>Iniciar Sesión con GitHub</h2>
            <form action="/auth/github" method="GET" class="github-form">
                <button type="submit">Iniciar Sesión con GitHub</button>
            </form>

            <!-- Botón para probar acceso a la ruta protegida -->
            <button id="protectedButton">Acceder a ruta protegida</button>
        </div>
    </div>

    <script>
    document.getElementById('loginForm').addEventListener('submit', async function (e) {
        e.preventDefault();
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;

        try {
            const response = await fetch('/user/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ email, password }),
            });

            const data = await response.json();
            console.log('Datos recibidos', data);

            if (data.access_token) {
                localStorage.setItem('token', data.access_token);
                console.log('Token guardado en localStorage:', localStorage.getItem('token'));
                window.location.href = data.redirectURL;
            } else {
                console.error('No se recibió un token.');
            }
        } catch (error) {
            console.error('Error al iniciar sesión:', error);
        }
    });

    document.getElementById('protectedButton').addEventListener('click', async function () {
        const token = localStorage.getItem('token');
        if (!token) {
            console.error('No hay token almacenado en localStorage.');
            alert('No se encontró el token en el almacenamiento local. Por favor, inicie sesión primero.');
            return;
        }

        console.log('Token obtenido del almacenamiento local:', token);

        try {
            const protectedResponse = await fetch('/products', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            });

            if (protectedResponse.ok) {
                try {
                    const responseData = await protectedResponse.json();
                    console.log(responseData);
                    alert('Acceso autorizado: ' + JSON.stringify(responseData));
                } catch (error) {
                    console.error('Error al analizar la respuesta JSON:', error);
                    alert(`Error al intentar acceder a la ruta protegida: ${error.message}`);
                }
            } else {
                const errorText = await protectedResponse.text();
                console.error('Error al intentar acceder a la ruta protegida. Código:', protectedResponse.status, 'Texto:', errorText);
                alert(`Error al intentar acceder a la ruta protegida: ${protectedResponse.status} ${errorText}`);
            }
        } catch (error) {
            console.error('Error al intentar acceder a la ruta protegida:', error);
            alert('Error al intentar acceder a la ruta protegida: ' + error.message);
        }
    });
    </script>
</body>
</html>
